/* tslint:disable */
export const memory: WebAssembly.Memory;
export function __wbg_htmlparser_free(a: number): void;
export function htmlparser_new(): number;
export function htmlparser_set_code_tag(a: number, b: number, c: number): number;
export function htmlparser_code_tag(a: number, b: number): void;
export function htmlparser_set_language_attribute(a: number, b: number, c: number): number;
export function htmlparser_language_attribute(a: number, b: number): void;
export function htmlparser_set_name_attribute(a: number, b: number, c: number): number;
export function htmlparser_name_attribute(a: number, b: number): void;
export function htmlparser_set_block_class(a: number, b: number, c: number): number;
export function htmlparser_block_class(a: number, b: number): void;
export function htmlparser_set_language_class(a: number, b: number, c: number): number;
export function htmlparser_language_class(a: number, b: number): void;
export function htmlparser_set_comments_as_aside(a: number, b: number): number;
export function htmlparser_comments_as_aside(a: number): number;
export function htmlparser_set_default_language(a: number, b: number, c: number): number;
export function htmlparser_default_language(a: number, b: number): void;
export function htmlparser_set_comment_start(a: number, b: number, c: number): number;
export function htmlparser_comment_start(a: number, b: number): void;
export function htmlparser_set_interpolation_start(a: number, b: number, c: number): number;
export function htmlparser_interpolation_start(a: number, b: number): void;
export function htmlparser_set_interpolation_end(a: number, b: number, c: number): number;
export function htmlparser_interpolation_end(a: number, b: number): void;
export function htmlparser_set_macro_start(a: number, b: number, c: number): number;
export function htmlparser_macro_start(a: number, b: number): void;
export function htmlparser_set_macro_end(a: number, b: number, c: number): number;
export function htmlparser_macro_end(a: number, b: number): void;
export function htmlparser_tangle(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function htmlparser_weave(a: number, b: number, c: number, d: number): void;
export function __wbg_mdparser_free(a: number): void;
export function mdparser_new(): number;
export function mdparser_set_fence_sequence(a: number, b: number, c: number): number;
export function mdparser_set_block_name_start(a: number, b: number, c: number): number;
export function mdparser_block_name_start(a: number, b: number): void;
export function mdparser_set_block_name_end(a: number, b: number, c: number): number;
export function mdparser_block_name_end(a: number, b: number): void;
export function mdparser_set_comments_as_aside(a: number, b: number): number;
export function mdparser_comments_as_aside(a: number): number;
export function mdparser_set_default_language(a: number, b: number, c: number): number;
export function mdparser_default_language(a: number, b: number): void;
export function mdparser_set_comment_start(a: number, b: number, c: number): number;
export function mdparser_comment_start(a: number, b: number): void;
export function mdparser_set_interpolation_start(a: number, b: number, c: number): number;
export function mdparser_interpolation_start(a: number, b: number): void;
export function mdparser_set_interpolation_end(a: number, b: number, c: number): number;
export function mdparser_interpolation_end(a: number, b: number): void;
export function mdparser_set_macro_start(a: number, b: number, c: number): number;
export function mdparser_macro_start(a: number, b: number): void;
export function mdparser_set_macro_end(a: number, b: number, c: number): number;
export function mdparser_macro_end(a: number, b: number): void;
export function mdparser_tangle(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function mdparser_weave(a: number, b: number, c: number, d: number): void;
export function __wbg_birdparser_free(a: number): void;
export function birdparser_new(): number;
export function birdparser_set_code_marker(a: number, b: number, c: number): number;
export function birdparser_code_marker(a: number, b: number): void;
export function birdparser_set_code_name_marker(a: number, b: number, c: number): number;
export function birdparser_code_name_marker(a: number, b: number): void;
export function birdparser_set_comment_start(a: number, b: number, c: number): number;
export function birdparser_comment_start(a: number, b: number): void;
export function birdparser_set_interpolation_start(a: number, b: number, c: number): number;
export function birdparser_interpolation_start(a: number, b: number): void;
export function birdparser_set_interpolation_end(a: number, b: number, c: number): number;
export function birdparser_interpolation_end(a: number, b: number): void;
export function birdparser_set_macro_start(a: number, b: number, c: number): number;
export function birdparser_macro_start(a: number, b: number): void;
export function birdparser_set_macro_end(a: number, b: number, c: number): number;
export function birdparser_macro_end(a: number, b: number): void;
export function birdparser_tangle(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function birdparser_weave(a: number, b: number, c: number, d: number): void;
export function __wbg_texparser_free(a: number): void;
export function texparser_new(): number;
export function texparser_set_code_environment(a: number, b: number, c: number): number;
export function texparser_code_environment(a: number, b: number): void;
export function texparser_set_default_language(a: number, b: number, c: number): number;
export function texparser_default_language(a: number, b: number): void;
export function texparser_set_comment_start(a: number, b: number, c: number): number;
export function texparser_comment_start(a: number, b: number): void;
export function texparser_set_interpolation_start(a: number, b: number, c: number): number;
export function texparser_interpolation_start(a: number, b: number): void;
export function texparser_set_interpolation_end(a: number, b: number, c: number): number;
export function texparser_interpolation_end(a: number, b: number): void;
export function texparser_set_macro_start(a: number, b: number, c: number): number;
export function texparser_macro_start(a: number, b: number): void;
export function texparser_set_macro_end(a: number, b: number, c: number): number;
export function texparser_macro_end(a: number, b: number): void;
export function texparser_tangle(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function texparser_weave(a: number, b: number, c: number, d: number): void;
export function __wbindgen_global_argument_ptr(): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
